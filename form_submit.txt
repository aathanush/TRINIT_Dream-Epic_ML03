def form_submit(request):
    if request.method == 'POST':
        nitrogen = request.POST.get('input1')
        phosphorus = request.POST.get('input2')
        potassium = request.POST.get('input3')
        humidity = request.POST.get('input4')
        ph_level = request.POST.get('input5')
        rain_fall = request.POST.get('input6')

        with open('rfc_crop_recommendation.pkl','rb') as f:
            mod = pickle.load(f)


        # Call your machine learning model here
        prediction = mod.predict(np.array([nitrogen,phosphorus,potassium,90,humidity,ph_level,rain_fall]).reshape(1,-1))
        with open('le.pkl','rb') as f:
            le=pickle.load(f)

        for i in range(10):
            print()

        print(prediction[0])
        recommendation=prediction[0]
        similar_crops = [['rice'],
                         ['pomegranate', 'mango', 'orange', 'coconut', 'papaya', 'banana', 'watermelon', 'muskmelon'],
                         ['grapes', 'coffee', 'apple'], ['cotton', 'maize', 'kidneybeans'],
                         ['lentil', 'chickpea', 'pigeonpeas', 'blackgram', 'mungbean', 'mothbeans', 'jute']]

        predicted_crop = le.inverse_transform(prediction)[0]
        others=[]
        for i in range(len(similar_crops)):
            if predicted_crop in similar_crops[i]:

                print("The alternate crops in decreasing order of profitability are")
                for j in similar_crops[i]:
                    if predicted_crop != j:
                        print(j)
                        others.append(j)

        result = {'prediction':predicted_crop,"alternate_recommendations":others}
        return render(request, 'index.html',result)
    return redirect('index')    
